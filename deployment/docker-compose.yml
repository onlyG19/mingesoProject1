version: "3.8"
services:
  # nginx servers
  nginx-backend:
    container_name: nginx-backend-container
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./backend.conf:/etc/nginx/nginx.conf
    networks:
      - autofix-backend-network
    depends_on:
      - app1
      - app2
      - app3

  nginx-frontend:
    container_name: nginx-frontend-container
    restart: always
    image: nginx:latest
    ports:
      - 8070:8070
    volumes:
      - ./frontend.conf:/etc/nginx/nginx.conf
    networks:
      - autofix-frontend-network
    depends_on:
      - react1
      - react2
      - react3
       
  postgres-db:
    container_name: postgres-db-container
    image: postgres:latest
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - ./data/db:/var/lib/postgresql
    networks:
      - autofix-backend-network
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: postgres
      POSTGRES_DB: autofix
    ports:
      - 5432:5432
  
  app1:
      container_name: proyecto_autofix_docker1
      image: byrong/proyecto_autofix_docker
      ports:
        - 8091:8090
      environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/autofix?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
        - SPRING_DATASOURCE_USERNAME=postgres
        - SPRING_DATASOURCE_PASSWORD=admin
      networks:
      - autofix-backend-network
      deploy:
        restart_policy:
          condition: on-failure
      depends_on:
        - postgres-db
  app2:
    container_name: proyecto_autofix_docker2
    image: byrong/proyecto_autofix_docker
    ports:
      - 8092:8090
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/autofix?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - autofix-backend-network
    depends_on:
      - postgres-db

  app3:
    container_name: proyecto_autofix_docker3
    image: byrong/proyecto_autofix_docker
    ports:
      - 8093:8090
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/autofix?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&useSSL=false
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - autofix-backend-network
    depends_on:
      - postgres-db

  react1:
    container_name: autofix-frontend-container-1
    image: byrong/proyecto_autofix_frontend_docker
    ports:
      - "3001:3000"
    networks:
      - autofix-frontend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres-db
  react2:
    container_name: autofix-frontend-container-2
    image: byrong/proyecto_autofix_frontend_docker
    ports:
      - "3002:3000"
    networks:
      - autofix-frontend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres-db
  react3:
    container_name: autofix-frontend-container-3
    image: byrong/proyecto_autofix_frontend_docker
    ports:
      - "3003:3000"
    networks:
      - autofix-frontend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres-db

networks:
  autofix-backend-network:
  autofix-frontend-network:
